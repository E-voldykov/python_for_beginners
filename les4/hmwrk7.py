"""
Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
При вызове функции должен создаваться объект-генератор.
Функция должна вызываться следующим образом: for el in fibo_gen().
Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые 15 чисел.
Подсказка: факториал числа n — произведение чисел от 1 до n.
Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
"""
# Сначала рещил так, но это немного не отвечает условиям задачи, поэтому сделал и через yield
from functools import reduce

fibo_gen_short = (reduce(lambda total, y: total * y, range(1, el)) for el in range(2, 17))

count1 = 0

for el in fibo_gen_short:
    count1 += 1
    print(f'Факториал числа {count1} - {el}')


# Ну и более "правильное" решение.

def fibo_gen():
    total = 1
    step = 1
    while step < 16:
        yield total * step
        total *= step
        step += 1


print("И ещё разок!")
count2 = 0

for el in fibo_gen():
    count2 += 1
    print(f'Факториал числа {count2} - {el}')
